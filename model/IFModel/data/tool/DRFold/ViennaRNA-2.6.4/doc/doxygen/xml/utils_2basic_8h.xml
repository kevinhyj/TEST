<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="utils_2basic_8h" kind="file" language="C++">
    <compoundname>basic.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes refid="datastructures_2basic_8h" local="no">ViennaRNA/datastructures/basic.h</includes>
    <includedby refid="hairpin_8h" local="no">ViennaRNA/loops/hairpin.h</includedby>
    <includedby refid="internal_8h" local="no">ViennaRNA/loops/internal.h</includedby>
    <includedby refid="multibranch_8h" local="no">ViennaRNA/loops/multibranch.h</includedby>
    <includedby refid="pair__mat_8h" local="no">ViennaRNA/pair_mat.h</includedby>
    <includedby refid="salt_8h" local="yes">ViennaRNA/params/salt.h</includedby>
    <includedby refid="utils_8h" local="no">ViennaRNA/utils.h</includedby>
    <incdepgraph>
      <node id="13">
        <label>ViennaRNA/constraints/basic.h</label>
        <link refid="constraints_2basic_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ViennaRNA/constraints/hard.h</label>
        <link refid="hard_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ViennaRNA/constraints/soft.h</label>
        <link refid="soft_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ViennaRNA/datastructures/basic.h</label>
        <link refid="datastructures_2basic_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ViennaRNA/dp_matrices.h</label>
        <link refid="dp__matrices_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ViennaRNA/fold_compound.h</label>
        <link refid="fold__compound_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ViennaRNA/grammar.h</label>
        <link refid="grammar_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ViennaRNA/model.h</label>
        <link refid="model_8h"/>
      </node>
      <node id="9">
        <label>ViennaRNA/params/basic.h</label>
        <link refid="params_2basic_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ViennaRNA/params/constants.h</label>
        <link refid="constants_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ViennaRNA/sequence.h</label>
        <link refid="sequence_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ViennaRNA/structured_domains.h</label>
        <link refid="structured__domains_8h"/>
      </node>
      <node id="18">
        <label>ViennaRNA/unstructured_domains.h</label>
        <link refid="unstructured__domains_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ViennaRNA/utils/basic.h</label>
        <link refid="utils_2basic_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ViennaRNA/utils/structures.h</label>
        <link refid="utils_2structures_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>ViennaRNA/zscore.h</label>
        <link refid="zscore_8h_source"/>
      </node>
      <node id="6">
        <label>limits.h</label>
      </node>
      <node id="3">
        <label>stdarg.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="15">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>ViennaRNA/hairpin_loops.h</label>
        <link refid="hairpin__loops_8h"/>
      </node>
      <node id="7">
        <label>ViennaRNA/interior_loops.h</label>
        <link refid="interior__loops_8h"/>
      </node>
      <node id="5">
        <label>ViennaRNA/loop_energies.h</label>
        <link refid="loop__energies_8h"/>
      </node>
      <node id="4">
        <label>ViennaRNA/loops/all.h</label>
        <link refid="all_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ViennaRNA/loops/hairpin.h</label>
        <link refid="hairpin_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ViennaRNA/loops/internal.h</label>
        <link refid="internal_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ViennaRNA/loops/multibranch.h</label>
        <link refid="multibranch_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ViennaRNA/multibranch_loops.h</label>
        <link refid="multibranch__loops_8h"/>
      </node>
      <node id="10">
        <label>ViennaRNA/pair_mat.h</label>
        <link refid="pair__mat_8h_source"/>
      </node>
      <node id="11">
        <label>ViennaRNA/params/salt.h</label>
        <link refid="salt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ViennaRNA/utils.h</label>
        <link refid="utils_8h"/>
      </node>
      <node id="1">
        <label>ViennaRNA/utils/basic.h</label>
        <link refid="utils_2basic_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="utils_2basic_8h_1aab347a3c03fbe8e7319551b9fa0cce4a" prot="public" static="no">
        <name>DEPRECATED</name>
        <param><defname>func   </defname></param>
        <param><defname>msg</defname></param>
        <initializer>func</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/basic.h" line="13" column="11" bodyfile="ViennaRNA/utils/basic.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <member refid="group__utils_1gad17d551e31d1828c68acf40684849b7e" kind="define"><name>PUBLIC</name></member>
      <member refid="group__utils_1ga5e151c615eda34903514212f05a5ccf8" kind="define"><name>PRIVATE</name></member>
      <member refid="group__utils_1gad403c9ea58f1836689404c2931419c8c" kind="define"><name>VRNA_INPUT_ERROR</name></member>
      <member refid="group__utils_1ga72f3c6ca5c83d2b9baed2922d19c403d" kind="define"><name>VRNA_INPUT_QUIT</name></member>
      <member refid="group__utils_1ga8e3241b321c9c1a78a69e59e2e019a71" kind="define"><name>VRNA_INPUT_MISC</name></member>
      <member refid="group__utils_1ga2f0d8069e93d3ac54d9320d6bdb8e7e7" kind="define"><name>VRNA_INPUT_FASTA_HEADER</name></member>
      <member refid="group__utils_1ga8566d6787972100e68b5a2a159b4cf45" kind="define"><name>VRNA_INPUT_SEQUENCE</name></member>
      <member refid="group__utils_1gac08a9df45b9721b97a47dbfe7a6e5f85" kind="define"><name>VRNA_INPUT_CONSTRAINT</name></member>
      <member refid="group__utils_1ga086742158293217a46ae2f71bb296937" kind="define"><name>VRNA_INPUT_NO_TRUNCATION</name></member>
      <member refid="group__utils_1ga7a2e8c50a0c7ce82e60da1016e1367fd" kind="define"><name>VRNA_INPUT_NO_REST</name></member>
      <member refid="group__utils_1ga0de536599b881c787b0943a2671da476" kind="define"><name>VRNA_INPUT_NO_SPAN</name></member>
      <member refid="group__utils_1gab4db885222b3b69608310d7c7e63e286" kind="define"><name>VRNA_INPUT_NOSKIP_BLANK_LINES</name></member>
      <member refid="group__utils_1ga305474b93ccb79ae4c7754016a8ddd84" kind="define"><name>VRNA_INPUT_BLANK_LINE</name></member>
      <member refid="group__utils_1ga0f6311f11bed1842e3a527ab27b294c6" kind="define"><name>VRNA_INPUT_NOSKIP_COMMENTS</name></member>
      <member refid="group__utils_1gaf2062e0eeefffd3ed639af460b3d4fab" kind="define"><name>VRNA_INPUT_COMMENT</name></member>
      <member refid="group__utils_1gae0b9cd0ce090bd69b951aa73e8fa4f7d" kind="define"><name>MIN2</name></member>
      <member refid="group__utils_1ga33297b3679c713b0c4d897cd0fe3b122" kind="define"><name>MAX2</name></member>
      <member refid="group__utils_1ga721b8d5f3abef17f10293f1f7f8c958e" kind="define"><name>MIN3</name></member>
      <member refid="group__utils_1ga8d577123d2e66d2b7d0bf9af6e172b93" kind="define"><name>MAX3</name></member>
      </sectiondef>
      <sectiondef kind="var">
      <member refid="group__utils_1gaf9a866c8417afda7368bbac939ab3c47" kind="variable"><name>xsubi</name></member>
      </sectiondef>
      <sectiondef kind="func">
      <member refid="group__utils_1gafae44c31c8772450d6c674a582be3e3c" kind="function"><name>vrna_alloc</name></member>
      <member refid="group__utils_1gac2bb3797d18490febf3557d1ed209c8a" kind="function"><name>vrna_realloc</name></member>
      <member refid="group__utils_1ga0ad1f40ea316e5c5918695c35613027a" kind="function"><name>vrna_init_rand</name></member>
      <member refid="group__utils_1ga940205dee1b00f94551cabbfbe6e654a" kind="function"><name>vrna_init_rand_seed</name></member>
      <member refid="group__utils_1ga384e256ebb295d04a14426179db0dd6e" kind="function"><name>vrna_urn</name></member>
      <member refid="group__utils_1ga46111bb3747dbcf4609f0d40ae169ad9" kind="function"><name>vrna_int_urn</name></member>
      <member refid="group__utils_1ga0b5134fd776e2aa66ccc2af258721594" kind="function"><name>vrna_time_stamp</name></member>
      <member refid="group__utils_1ga8ef1835eb83f542396f59f0b205965e5" kind="function"><name>get_input_line</name></member>
      <member refid="group__utils_1ga27d6f59da187317ab4c0d7e9f15ee57a" kind="function"><name>vrna_idx_row_wise</name></member>
      <member refid="group__utils_1ga93a00c17b7644d1e755943d01664cae0" kind="function"><name>vrna_idx_col_wise</name></member>
      <member refid="group__message__utils_1ga36b35be01d7f36cf7f59c245eee628d1" kind="function"><name>vrna_message_error</name></member>
      <member refid="group__message__utils_1gabc1a08dea0d84b5c33701732172a8b18" kind="function"><name>vrna_message_verror</name></member>
      <member refid="group__message__utils_1ga6e07ed24add60693ba886d54d0a46635" kind="function"><name>vrna_message_warning</name></member>
      <member refid="group__message__utils_1ga377aa8ec8a49d343063adb22e6311f26" kind="function"><name>vrna_message_vwarning</name></member>
      <member refid="group__message__utils_1ga039bae6153a6415b054dbe6045f83d03" kind="function"><name>vrna_message_info</name></member>
      <member refid="group__message__utils_1gad8b8139bd04fbfb51e398e9fcd6908dc" kind="function"><name>vrna_message_vinfo</name></member>
      <member refid="group__message__utils_1gaee1dd652ca5b9e56b096963a1576f73b" kind="function"><name>vrna_message_input_seq_simple</name></member>
      <member refid="group__message__utils_1gaf4d194d558b0c975f269de01dea52460" kind="function"><name>vrna_message_input_seq</name></member>
      <member refid="group__message__utils_1ga32445b4d868708899f8b928b2b7f1259" kind="function"><name>vrna_message_input_msa</name></member>
      <memberdef kind="function" id="utils_2basic_8h_1ae2e8757ea4a8459df0cb883b246123b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int * get_indx</definition>
        <argsstring>(unsigned int length)</argsstring>
        <name>get_indx</name>
        <param>
          <type>unsigned int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/basic.h" line="431" column="6" declfile="ViennaRNA/utils/basic.h" declline="431" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="utils_2basic_8h_1a0c02cfb2b3d011641e3661085c862da9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int * get_iindx</definition>
        <argsstring>(unsigned int length)</argsstring>
        <name>get_iindx</name>
        <param>
          <type>unsigned int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/basic.h" line="433" column="6" declfile="ViennaRNA/utils/basic.h" declline="433" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="utils_2basic_8h_1a9be3ef91c5f36a48b7e5da97f265183f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * get_line</definition>
        <argsstring>(FILE *fp)</argsstring>
        <name>get_line</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
<para>Read a line of arbitrary length from a stream. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a pointer to the resulting string. The necessary memory is allocated and should be released using <emphasis>free()</emphasis> when the string is no longer needed.</para>
<para><xrefsect id="deprecated_1_deprecated000183"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__file__utils_1gaed2a3fdeab38ede529ff3c9d02ef3415" kindref="member">vrna_read_line()</ref> as a substitute!</para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fp</parametername>
</parameternamelist>
<parameterdescription>
<para>A file pointer to the stream where the function should read from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the resulting string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/basic.h" line="447" column="7" declfile="ViennaRNA/utils/basic.h" declline="447" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="utils_2basic_8h_1a6bf778117d31b7fd90db435323f4ef74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_tty_input_seq</definition>
        <argsstring>(void)</argsstring>
        <name>print_tty_input_seq</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Print a line to <emphasis>stdout</emphasis> that asks for an input sequence. </para>
        </briefdescription>
        <detaileddescription>
<para>There will also be a ruler (scale line) printed that helps orientation of the sequence positions <xrefsect id="deprecated_1_deprecated000184"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__message__utils_1gaee1dd652ca5b9e56b096963a1576f73b" kindref="member">vrna_message_input_seq_simple()</ref> instead! </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/basic.h" line="455" column="7" declfile="ViennaRNA/utils/basic.h" declline="455" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="utils_2basic_8h_1ae4ef89b662a3e9b5b5f0781d9757aba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_tty_input_seq_str</definition>
        <argsstring>(const char *s)</argsstring>
        <name>print_tty_input_seq_str</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Print a line with a user defined string and a ruler to stdout. </para>
        </briefdescription>
        <detaileddescription>
<para>(usually this is used to ask for user input) There will also be a ruler (scale line) printed that helps orientation of the sequence positions</para>
<para><xrefsect id="deprecated_1_deprecated000185"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__message__utils_1gaf4d194d558b0c975f269de01dea52460" kindref="member">vrna_message_input_seq()</ref> instead! </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/basic.h" line="465" column="7" declfile="ViennaRNA/utils/basic.h" declline="465" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="utils_2basic_8h_1af2355fa8746f2f30fbe71db65dea3d51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void warn_user</definition>
        <argsstring>(const char message[])</argsstring>
        <name>warn_user</name>
        <param>
          <type>const char</type>
          <declname>message</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Print a warning message. </para>
        </briefdescription>
        <detaileddescription>
<para>Print a warning message to <emphasis>stderr</emphasis> </para>
<para><xrefsect id="deprecated_1_deprecated000186"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__message__utils_1ga6e07ed24add60693ba886d54d0a46635" kindref="member">vrna_message_warning()</ref> instead! (since v2.3.0) </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/basic.h" line="474" column="7" declfile="ViennaRNA/utils/basic.h" declline="474" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="utils_2basic_8h_1a127ce946e56b5a5773781cabe68e38c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrerror</definition>
        <argsstring>(const char message[])</argsstring>
        <name>nrerror</name>
        <param>
          <type>const char</type>
          <declname>message</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Die with an error message. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000187"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__message__utils_1ga36b35be01d7f36cf7f59c245eee628d1" kindref="member">vrna_message_error()</ref> instead! (since v2.3.0) </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/basic.h" line="481" column="7" declfile="ViennaRNA/utils/basic.h" declline="481" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="utils_2basic_8h_1a83f2f6369766056d7a146f36a7c9682d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * space</definition>
        <argsstring>(unsigned size)</argsstring>
        <name>space</name>
        <param>
          <type>unsigned</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Allocate space safely. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000188"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__utils_1gafae44c31c8772450d6c674a582be3e3c" kindref="member">vrna_alloc()</ref> instead! (since v2.2.0) </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/basic.h" line="488" column="7" declfile="ViennaRNA/utils/basic.h" declline="488" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="utils_2basic_8h_1a84187bd2503fe00f7cd60f3b4add783d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * xrealloc</definition>
        <argsstring>(void *p, unsigned size)</argsstring>
        <name>xrealloc</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Reallocate space safely. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000189"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__utils_1gac2bb3797d18490febf3557d1ed209c8a" kindref="member">vrna_realloc()</ref> instead! (since v2.2.0) </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/basic.h" line="496" column="7" declfile="ViennaRNA/utils/basic.h" declline="496" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="utils_2basic_8h_1a8aaa6d9be6f803f496d9b97375c371f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_rand</definition>
        <argsstring>(void)</argsstring>
        <name>init_rand</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Make random number seeds. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000190"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__utils_1ga0ad1f40ea316e5c5918695c35613027a" kindref="member">vrna_init_rand()</ref> instead! </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/basic.h" line="502" column="7" declfile="ViennaRNA/utils/basic.h" declline="502" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="utils_2basic_8h_1aaa328491c84996e445d027fde9800f2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double urn</definition>
        <argsstring>(void)</argsstring>
        <name>urn</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>get a random number from [0..1] </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000191"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__utils_1ga384e256ebb295d04a14426179db0dd6e" kindref="member">vrna_urn()</ref> instead! </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/basic.h" line="509" column="9" declfile="ViennaRNA/utils/basic.h" declline="509" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="utils_2basic_8h_1a68ff0849d44f62fe491800378a5ffcb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int int_urn</definition>
        <argsstring>(int from, int to)</argsstring>
        <name>int_urn</name>
        <param>
          <type>int</type>
          <declname>from</declname>
        </param>
        <param>
          <type>int</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Generates a pseudo random integer in a specified range. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000192"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__utils_1ga46111bb3747dbcf4609f0d40ae169ad9" kindref="member">vrna_int_urn()</ref> instead! </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/basic.h" line="517" column="6" declfile="ViennaRNA/utils/basic.h" declline="517" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="utils_2basic_8h_1ab213334ce977b6d21611cdea6b80c3bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void filecopy</definition>
        <argsstring>(FILE *from, FILE *to)</argsstring>
        <name>filecopy</name>
        <param>
          <type>FILE *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Inefficient <computeroutput>cp</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000193"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__file__utils_1ga4382a56d2fee9ed738364b99329edc7c" kindref="member">vrna_file_copy()</ref> instead! </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/basic.h" line="525" column="7" declfile="ViennaRNA/utils/basic.h" declline="525" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="utils_2basic_8h_1a567cf902a24ba5ae182983721a042fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * time_stamp</definition>
        <argsstring>(void)</argsstring>
        <name>time_stamp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get a timestamp. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000194"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__utils_1ga0b5134fd776e2aa66ccc2af258721594" kindref="member">vrna_time_stamp()</ref> instead! </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ViennaRNA/utils/basic.h" line="532" column="7" declfile="ViennaRNA/utils/basic.h" declline="532" declcolumn="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>General utility- and helper-functions used throughout the <emphasis>ViennaRNA</emphasis> <emphasis>Package</emphasis>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>VIENNA_RNA_PACKAGE_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIENNA_RNA_PACKAGE_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VRNA_WARN_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(&quot;&quot;</highlight><highlight class="normal">,<sp/>msg)))</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func<sp/>__attribute__<sp/>((deprecated(msg)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>DEPRECATED(func,<sp/>msg)<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>two<sp/>helper<sp/>macros<sp/>to<sp/>indicate<sp/>whether<sp/>a<sp/>function<sp/>should<sp/>be<sp/>exported<sp/>in</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>the<sp/>library<sp/>or<sp/>stays<sp/>hidden<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PUBLIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRIVATE<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="group__utils_1gad403c9ea58f1836689404c2931419c8c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_INPUT_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group__utils_1ga72f3c6ca5c83d2b9baed2922d19c403d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_INPUT_QUIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="group__utils_1ga8e3241b321c9c1a78a69e59e2e019a71" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_INPUT_MISC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group__utils_1ga2f0d8069e93d3ac54d9320d6bdb8e7e7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_INPUT_FASTA_HEADER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/>@brief<sp/><sp/>Input<sp/>flag<sp/>for<sp/>get_input_line():\n</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/>Tell<sp/>get_input_line()<sp/>that<sp/>we<sp/>assume<sp/>to<sp/>read<sp/>a<sp/>nucleotide<sp/>sequence</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_INPUT_SEQUENCE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group__utils_1gac08a9df45b9721b97a47dbfe7a6e5f85" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_INPUT_CONSTRAINT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="group__utils_1ga086742158293217a46ae2f71bb296937" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_INPUT_NO_TRUNCATION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>256U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="group__utils_1ga7a2e8c50a0c7ce82e60da1016e1367fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_INPUT_NO_REST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>512U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="group__utils_1ga0de536599b881c787b0943a2671da476" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_INPUT_NO_SPAN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="group__utils_1gab4db885222b3b69608310d7c7e63e286" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_INPUT_NOSKIP_BLANK_LINES<sp/><sp/><sp/><sp/><sp/>2048U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="group__utils_1ga305474b93ccb79ae4c7754016a8ddd84" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_INPUT_BLANK_LINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4096U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="group__utils_1ga0f6311f11bed1842e3a527ab27b294c6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_INPUT_NOSKIP_COMMENTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="group__utils_1gaf2062e0eeefffd3ed639af460b3d4fab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VRNA_INPUT_COMMENT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8192U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="group__utils_1gae0b9cd0ce090bd69b951aa73e8fa4f7d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN2(A,<sp/>B)<sp/><sp/><sp/><sp/><sp/><sp/>((A)<sp/>&lt;<sp/>(B)<sp/>?<sp/>(A)<sp/>:<sp/>(B))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="group__utils_1ga33297b3679c713b0c4d897cd0fe3b122" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX2(A,<sp/>B)<sp/><sp/><sp/><sp/><sp/><sp/>((A)<sp/>&gt;<sp/>(B)<sp/>?<sp/>(A)<sp/>:<sp/>(B))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="group__utils_1ga721b8d5f3abef17f10293f1f7f8c958e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN3(A,<sp/>B,<sp/>C)<sp/><sp/><sp/>(MIN2((MIN2((A),<sp/>(B))),<sp/>(C)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="group__utils_1ga8d577123d2e66d2b7d0bf9af6e172b93" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX3(A,<sp/>B,<sp/>C)<sp/><sp/><sp/>(MAX2((MAX2((A),<sp/>(B))),<sp/>(C)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="datastructures_2basic_8h" kindref="compound">ViennaRNA/datastructures/basic.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_DMALLOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>use<sp/>dmalloc<sp/>library<sp/>to<sp/>check<sp/>for<sp/>memory<sp/>management<sp/>bugs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dmalloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>vrna_alloc(S)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>calloc(1,<sp/>(S))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>vrna_realloc(p,<sp/>S)<sp/><sp/>xrealloc(p,<sp/>S)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="143" refid="group__utils_1gafae44c31c8772450d6c674a582be3e3c" refkind="member"><highlight class="normal"><ref refid="group__utils_1gafae44c31c8772450d6c674a582be3e3c" kindref="member">vrna_alloc</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="154" refid="group__utils_1gac2bb3797d18490febf3557d1ed209c8a" refkind="member"><highlight class="normal"><ref refid="group__utils_1gac2bb3797d18490febf3557d1ed209c8a" kindref="member">vrna_realloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*p,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="group__utils_1ga0ad1f40ea316e5c5918695c35613027a" refkind="member"><highlight class="normal"><ref refid="group__utils_1ga0ad1f40ea316e5c5918695c35613027a" kindref="member">vrna_init_rand</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="group__utils_1ga940205dee1b00f94551cabbfbe6e654a" refkind="member"><highlight class="normal"><ref refid="group__utils_1ga940205dee1b00f94551cabbfbe6e654a" kindref="member">vrna_init_rand_seed</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="group__utils_1gaf9a866c8417afda7368bbac939ab3c47" kindref="member">xsubi</ref>[3];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="group__utils_1ga384e256ebb295d04a14426179db0dd6e" refkind="member"><highlight class="normal"><ref refid="group__utils_1ga384e256ebb295d04a14426179db0dd6e" kindref="member">vrna_urn</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="group__utils_1ga46111bb3747dbcf4609f0d40ae169ad9" refkind="member"><highlight class="normal"><ref refid="group__utils_1ga46111bb3747dbcf4609f0d40ae169ad9" kindref="member">vrna_int_urn</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>from,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>to);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="226" refid="group__utils_1ga0b5134fd776e2aa66ccc2af258721594" refkind="member"><highlight class="normal"><ref refid="group__utils_1ga0b5134fd776e2aa66ccc2af258721594" kindref="member">vrna_time_stamp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="group__utils_1ga8ef1835eb83f542396f59f0b205965e5" refkind="member"><highlight class="normal"><ref refid="group__utils_1ga8ef1835eb83f542396f59f0b205965e5" kindref="member">get_input_line</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>options);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="269" refid="group__utils_1ga27d6f59da187317ab4c0d7e9f15ee57a" refkind="member"><highlight class="normal"><ref refid="group__utils_1ga27d6f59da187317ab4c0d7e9f15ee57a" kindref="member">vrna_idx_row_wise</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="288" refid="group__utils_1ga93a00c17b7644d1e755943d01664cae0" refkind="member"><highlight class="normal"><ref refid="group__utils_1ga93a00c17b7644d1e755943d01664cae0" kindref="member">vrna_idx_col_wise</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="group__message__utils_1ga36b35be01d7f36cf7f59c245eee628d1" refkind="member"><highlight class="normal"><ref refid="group__message__utils_1ga36b35be01d7f36cf7f59c245eee628d1" kindref="member">vrna_message_error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="group__message__utils_1gabc1a08dea0d84b5c33701732172a8b18" refkind="member"><highlight class="normal"><ref refid="group__message__utils_1gabc1a08dea0d84b5c33701732172a8b18" kindref="member">vrna_message_verror</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*format,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/>args);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="group__message__utils_1ga6e07ed24add60693ba886d54d0a46635" refkind="member"><highlight class="normal"><ref refid="group__message__utils_1ga6e07ed24add60693ba886d54d0a46635" kindref="member">vrna_message_warning</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="group__message__utils_1ga377aa8ec8a49d343063adb22e6311f26" refkind="member"><highlight class="normal"><ref refid="group__message__utils_1ga377aa8ec8a49d343063adb22e6311f26" kindref="member">vrna_message_vwarning</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*format,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/>args);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="group__message__utils_1ga039bae6153a6415b054dbe6045f83d03" refkind="member"><highlight class="normal"><ref refid="group__message__utils_1ga039bae6153a6415b054dbe6045f83d03" kindref="member">vrna_message_info</ref>(FILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fp,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*format,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="group__message__utils_1gad8b8139bd04fbfb51e398e9fcd6908dc" refkind="member"><highlight class="normal"><ref refid="group__message__utils_1gad8b8139bd04fbfb51e398e9fcd6908dc" kindref="member">vrna_message_vinfo</ref>(FILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fp,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/>args);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="group__message__utils_1gaee1dd652ca5b9e56b096963a1576f73b" refkind="member"><highlight class="normal"><ref refid="group__message__utils_1gaee1dd652ca5b9e56b096963a1576f73b" kindref="member">vrna_message_input_seq_simple</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="group__message__utils_1gaf4d194d558b0c975f269de01dea52460" refkind="member"><highlight class="normal"><ref refid="group__message__utils_1gaf4d194d558b0c975f269de01dea52460" kindref="member">vrna_message_input_seq</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal">vrna_message_input_msa(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VRNA_DISABLE_BACKWARD_COMPATIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*get_indx(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length),<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_idx_col_wise()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*get_iindx(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length),<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_idx_row_wise()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="utils_2basic_8h_1a9be3ef91c5f36a48b7e5da97f265183f" refkind="member"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="utils_2basic_8h_1a9be3ef91c5f36a48b7e5da97f265183f" kindref="member">get_line</ref>(FILE<sp/>*fp),<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_read_line()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="utils_2basic_8h_1a6bf778117d31b7fd90db435323f4ef74" refkind="member"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utils_2basic_8h_1a6bf778117d31b7fd90db435323f4ef74" kindref="member">print_tty_input_seq</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_message_input_seq_simple()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="utils_2basic_8h_1ae4ef89b662a3e9b5b5f0781d9757aba0" refkind="member"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utils_2basic_8h_1ae4ef89b662a3e9b5b5f0781d9757aba0" kindref="member">print_tty_input_seq_str</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s),<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_message_input_seq()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="utils_2basic_8h_1af2355fa8746f2f30fbe71db65dea3d51" refkind="member"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utils_2basic_8h_1af2355fa8746f2f30fbe71db65dea3d51" kindref="member">warn_user</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>message[]),<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_message_warning()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="utils_2basic_8h_1a127ce946e56b5a5773781cabe68e38c5" refkind="member"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utils_2basic_8h_1a127ce946e56b5a5773781cabe68e38c5" kindref="member">nrerror</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>message[]),<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_message_error()<sp/>instead()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="utils_2basic_8h_1a83f2f6369766056d7a146f36a7c9682d" refkind="member"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="utils_2basic_8h_1a83f2f6369766056d7a146f36a7c9682d" kindref="member">space</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>size),<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_alloc()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="utils_2basic_8h_1a84187bd2503fe00f7cd60f3b4add783d" kindref="member">xrealloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p,</highlight></codeline>
<codeline lineno="496" refid="utils_2basic_8h_1a84187bd2503fe00f7cd60f3b4add783d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/>size),<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_realloc()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="utils_2basic_8h_1a8aaa6d9be6f803f496d9b97375c371f3" refkind="member"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utils_2basic_8h_1a8aaa6d9be6f803f496d9b97375c371f3" kindref="member">init_rand</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_init_rand()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="utils_2basic_8h_1aaa328491c84996e445d027fde9800f2e" refkind="member"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="utils_2basic_8h_1aaa328491c84996e445d027fde9800f2e" kindref="member">urn</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_urn()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="utils_2basic_8h_1a68ff0849d44f62fe491800378a5ffcb4" kindref="member">int_urn</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>from,</highlight></codeline>
<codeline lineno="517" refid="utils_2basic_8h_1a68ff0849d44f62fe491800378a5ffcb4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>to),<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_int_urn()<sp/>instead()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="utils_2basic_8h_1ab213334ce977b6d21611cdea6b80c3bf" kindref="member">filecopy</ref>(FILE<sp/>*from,</highlight></codeline>
<codeline lineno="525" refid="utils_2basic_8h_1ab213334ce977b6d21611cdea6b80c3bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*to),<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_file_copy()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="utils_2basic_8h_1a567cf902a24ba5ae182983721a042fa6" refkind="member"><highlight class="normal">DEPRECATED(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="utils_2basic_8h_1a567cf902a24ba5ae182983721a042fa6" kindref="member">time_stamp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>vrna_time_stamp()<sp/>instead&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ViennaRNA/utils/basic.h"/>
  </compounddef>
</doxygen>
